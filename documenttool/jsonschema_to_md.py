import os
import sys
import json
import argparse
import traceback

import jsonschema2md
import pyperclip

THIS_FILENAME = os.path.basename(__file__)

def json_schema_to_markdown(schema_file_path: str, add_paragraph_count: int = 0) -> str:
    parser = jsonschema2md.Parser(
        examples_as_yaml=False,
        show_examples="all"
    )

    with open(schema_file_path, "r") as f:
        markdown_lines = parser.parse_schema(json.load(f))
        if add_paragraph_count > 0:
            markdown_lines = [("#" * add_paragraph_count) + line if line.startswith('#') else line for line in markdown_lines]

    return ''.join(markdown_lines)

def main() -> None:
    parser = argparse.ArgumentParser(prog=f"python -m {__spec__.name}", description="Convert JSON schema to markdown. The result will be copied to the clipboard.")
    parser.add_argument("-v", "--verbose", help="Enable verbose logging.", action="store_true")
    parser.add_argument("input_files", nargs="+", help="Path to the input JSON schema file(s).")

    args = parser.parse_args()

    try:
        HEADER_COMMENT = f"<!-- [BEGIN] Generated by documenttool/{THIS_FILENAME} -->\n"
        FOOTER_COMMENT = f"<!-- [END] Generated by documenttool/{THIS_FILENAME} -->\n"

        result = []

        result.append(HEADER_COMMENT)

        for file in args.input_files:
            md_txt = json_schema_to_markdown(file, 2)
            result.append(md_txt)

        result.append(FOOTER_COMMENT)

        pyperclip.copy(''.join(result))
        print("Copied to clipboard.")

    except Exception as e:
        print(e)
        if args.verbose:
            (_, _, trace) = sys.exc_info()
            traceback.print_tb(trace)


if __name__ == "__main__":
    main()
